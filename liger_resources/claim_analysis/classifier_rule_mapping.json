{
  "name": "claim_analysis",
  "version": "1.0.0",
  "classifiers": {
    "CNFN": {
      "rules": "",
      "query": "#a root #b xcomp #c"
    },
    "CFIN": {
      "rules": "",
      "query": "#a root #b ccomp #c"
    },
    "CMDV": {
      "rules": "",
      "query": "#a root #b aux #c & #c POS MD"
    },
    "CPST": {
      "rules": "--replace(true);\n\n//Finite forms\n#a POS VBZ & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBP & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'past' & #b HEAD %a.\n#a POS MD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'lex(%a,tense)' & #b HEAD %a.\n\n\n//Non-finite forms\n#a POS VBG & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'prpart'.\n#a POS VBN & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'ppart'.\n#a POS VB & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'inf'.\n\n//Copu\n#a POS JJ & #a TOKEN %a & #a cop #b TOKEN %b &\n#b MORPH #c FIN %c & #c FORM %d ==> #a MORPH #c & #c HEAD %b %a & #c FIN %c & #c FORM %d.\n\n\n//separate finite from non-finite verbs\n#a MORPH #b FIN '+' ==> #b AUX '-'.\n\n#a FORM 'ppart' ==> #a ASPECT 'perf'.\n#a FORM 'prpart' ==> #a ASPECT 'prog'.\n\n#a aux #b & #b MORPH #c ASPECT %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a cop #b & #b TOKEN %c & #b MORPH #c ASPECT %c &\n#c HEAD %b & #a TOKEN %a\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #c HEAD %b %a.\n\n//Fusing heads for aux verbs in the main verb (finite aux)\n#a aux #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux:pass #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux #b & #b MORPH #c FIN '+' & #c FORM %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d FIN '+' & #d FORM %c & #d HEAD %b %d.\n\n#a aux:pass #b & #a MORPH #c FIN '+' & #b MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #b AUX '+' & #c AUX #d & #c MAIN '+' & #c HEAD %d %b.\n\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'ppart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'perf' & #b ASPECT 'perf'.\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'prpart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'prog'.\n\n#a LEMMA go & #a MORPH #b ASPECT 'prog' &\n#a aux #c MORPH #f FIN '+' & #f FORM %f &\n#a xcomp #d & #d MORPH #e &\n#b HEAD %b & #e HEAD %e\n==> #e AUX #b & #e FORM %f('fut') & #b MAIN '-' & #e FIN '+' & #b FIN '+' & #e MAIN '+' & #e HEAD %b to %e.\n\n//Simple tense\n#b FIN '+' & #b FORM %b & #b HEAD %c & #b AUX '-' ==> #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//Tense from aux verb\n#b MAIN '+' & #b AUX #c & #c FIN '+' & #b FORM %b &\n#c HEAD %d & #b HEAD %c ==> #c TAM #d & #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//aspect\n#a HEAD %a & #a MAIN '+' & #a ASPECT %b & #a FIN '-' ==> #a TAM #b & #b HEAD %a & #b ASPECT %b.\n\n//Aspect\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a FIN '+' ==> #b ASPECT %a.\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a ASP-AUX #c ASPECT %b ==> #b ASPECT '%b,%a'.\n\n\n\n",
      "query": "#a root #b MORPH #c TAM #d TENSE 'past'"
    },
    "CPRS": {
      "rules": "--replace(true);\n\n//Finite forms\n#a POS VBZ & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBP & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'past' & #b HEAD %a.\n#a POS MD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'lex(%a,tense)' & #b HEAD %a.\n\n\n//Non-finite forms\n#a POS VBG & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'prpart'.\n#a POS VBN & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'ppart'.\n#a POS VB & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'inf'.\n\n//Copu\n#a POS JJ & #a TOKEN %a & #a cop #b TOKEN %b &\n#b MORPH #c FIN %c & #c FORM %d ==> #a MORPH #c & #c HEAD %b %a & #c FIN %c & #c FORM %d.\n\n\n//separate finite from non-finite verbs\n#a MORPH #b FIN '+' ==> #b AUX '-'.\n\n#a FORM 'ppart' ==> #a ASPECT 'perf'.\n#a FORM 'prpart' ==> #a ASPECT 'prog'.\n\n#a aux #b & #b MORPH #c ASPECT %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a cop #b & #b TOKEN %c & #b MORPH #c ASPECT %c &\n#c HEAD %b & #a TOKEN %a\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #c HEAD %b %a.\n\n//Fusing heads for aux verbs in the main verb (finite aux)\n#a aux #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux:pass #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux #b & #b MORPH #c FIN '+' & #c FORM %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d FIN '+' & #d FORM %c & #d HEAD %b %d.\n\n#a aux:pass #b & #a MORPH #c FIN '+' & #b MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #b AUX '+' & #c AUX #d & #c MAIN '+' & #c HEAD %d %b.\n\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'ppart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'perf' & #b ASPECT 'perf'.\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'prpart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'prog'.\n\n#a LEMMA go & #a MORPH #b ASPECT 'prog' &\n#a aux #c MORPH #f FIN '+' & #f FORM %f &\n#a xcomp #d & #d MORPH #e &\n#b HEAD %b & #e HEAD %e\n==> #e AUX #b & #e FORM %f('fut') & #b MAIN '-' & #e FIN '+' & #b FIN '+' & #e MAIN '+' & #e HEAD %b to %e.\n\n//Simple tense\n#b FIN '+' & #b FORM %b & #b HEAD %c & #b AUX '-' ==> #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//Tense from aux verb\n#b MAIN '+' & #b AUX #c & #c FIN '+' & #b FORM %b &\n#c HEAD %d & #b HEAD %c ==> #c TAM #d & #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//aspect\n#a HEAD %a & #a MAIN '+' & #a ASPECT %b & #a FIN '-' ==> #a TAM #b & #b HEAD %a & #b ASPECT %b.\n\n//Aspect\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a FIN '+' ==> #b ASPECT %a.\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a ASP-AUX #c ASPECT %b ==> #b ASPECT '%b,%a'.\n\n\n\n",
      "query": "#a root #b MORPH #c TAM #d TENSE 'pres'"
    },
    "CFUT": {
      "rules": "--replace(true);\n\n//Finite forms\n#a POS VBZ & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBP & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'past' & #b HEAD %a.\n#a POS MD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'lex(%a,tense)' & #b HEAD %a.\n\n\n//Non-finite forms\n#a POS VBG & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'prpart'.\n#a POS VBN & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'ppart'.\n#a POS VB & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'inf'.\n\n//Copu\n#a POS JJ & #a TOKEN %a & #a cop #b TOKEN %b &\n#b MORPH #c FIN %c & #c FORM %d ==> #a MORPH #c & #c HEAD %b %a & #c FIN %c & #c FORM %d.\n\n\n//separate finite from non-finite verbs\n#a MORPH #b FIN '+' ==> #b AUX '-'.\n\n#a FORM 'ppart' ==> #a ASPECT 'perf'.\n#a FORM 'prpart' ==> #a ASPECT 'prog'.\n\n#a aux #b & #b MORPH #c ASPECT %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a cop #b & #b TOKEN %c & #b MORPH #c ASPECT %c &\n#c HEAD %b & #a TOKEN %a\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #c HEAD %b %a.\n\n//Fusing heads for aux verbs in the main verb (finite aux)\n#a aux #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux:pass #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux #b & #b MORPH #c FIN '+' & #c FORM %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d FIN '+' & #d FORM %c & #d HEAD %b %d.\n\n#a aux:pass #b & #a MORPH #c FIN '+' & #b MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #b AUX '+' & #c AUX #d & #c MAIN '+' & #c HEAD %d %b.\n\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'ppart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'perf' & #b ASPECT 'perf'.\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'prpart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'prog'.\n\n#a LEMMA go & #a MORPH #b ASPECT 'prog' &\n#a aux #c MORPH #f FIN '+' & #f FORM %f &\n#a xcomp #d & #d MORPH #e &\n#b HEAD %b & #e HEAD %e\n==> #e AUX #b & #e FORM %f('fut') & #b MAIN '-' & #e FIN '+' & #b FIN '+' & #e MAIN '+' & #e HEAD %b to %e.\n\n//Simple tense\n#b FIN '+' & #b FORM %b & #b HEAD %c & #b AUX '-' ==> #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//Tense from aux verb\n#b MAIN '+' & #b AUX #c & #c FIN '+' & #b FORM %b &\n#c HEAD %d & #b HEAD %c ==> #c TAM #d & #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//aspect\n#a HEAD %a & #a MAIN '+' & #a ASPECT %b & #a FIN '-' ==> #a TAM #b & #b HEAD %a & #b ASPECT %b.\n\n//Aspect\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a FIN '+' ==> #b ASPECT %a.\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a ASP-AUX #c ASPECT %b ==> #b ASPECT '%b,%a'.\n\n\n\n",
      "query": "#a root #b MORPH #c TAM #d TENSE 'future'"
    },
    "CPSP": {
      "rules": "--replace(true);\n\n//Finite forms\n#a POS VBZ & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBP & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'pres' & #b HEAD %a.\n#a POS VBD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'past' & #b HEAD %a.\n#a POS MD & #a TOKEN %a ==> #a MORPH #b & #b FIN '+' & #b FORM 'lex(%a,tense)' & #b HEAD %a.\n\n\n//Non-finite forms\n#a POS VBG & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'prpart'.\n#a POS VBN & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'ppart'.\n#a POS VB & #a TOKEN %a ==> #a MORPH #b & #b FIN '-' & #b HEAD %a & #b FORM 'inf'.\n\n//Copu\n#a POS JJ & #a TOKEN %a & #a cop #b TOKEN %b &\n#b MORPH #c FIN %c & #c FORM %d ==> #a MORPH #c & #c HEAD %b %a & #c FIN %c & #c FORM %d.\n\n\n//separate finite from non-finite verbs\n#a MORPH #b FIN '+' ==> #b AUX '-'.\n\n#a FORM 'ppart' ==> #a ASPECT 'perf'.\n#a FORM 'prpart' ==> #a ASPECT 'prog'.\n\n#a aux #b & #b MORPH #c ASPECT %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a cop #b & #b TOKEN %c & #b MORPH #c ASPECT %c &\n#c HEAD %b & #a TOKEN %a\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #c HEAD %b %a.\n\n//Fusing heads for aux verbs in the main verb (finite aux)\n#a aux #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux:pass #b & #b MORPH #c FORM 'inf' & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d ASP-AUX #c & #d MAIN '+' & #d HEAD %b %d.\n\n#a aux #b & #b MORPH #c FIN '+' & #c FORM %c & #a MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d FIN '+' & #d FORM %c & #d HEAD %b %d.\n\n#a aux:pass #b & #a MORPH #c FIN '+' & #b MORPH #d &\n#c HEAD %b & #d HEAD %d\n==> #b AUX '+' & #c AUX #d & #c MAIN '+' & #c HEAD %d %b.\n\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'ppart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'perf' & #b ASPECT 'perf'.\n//#a aux #b & #b MORPH #c TENSE %c & #a MORPH #d FORM 'prpart' ==> #c AUX '+' & #d AUX #c & #d MAIN '+' & #d ASPECT 'prog'.\n\n#a LEMMA go & #a MORPH #b ASPECT 'prog' &\n#a aux #c MORPH #f FIN '+' & #f FORM %f &\n#a xcomp #d & #d MORPH #e &\n#b HEAD %b & #e HEAD %e\n==> #e AUX #b & #e FORM %f('fut') & #b MAIN '-' & #e FIN '+' & #b FIN '+' & #e MAIN '+' & #e HEAD %b to %e.\n\n//Simple tense\n#b FIN '+' & #b FORM %b & #b HEAD %c & #b AUX '-' ==> #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//Tense from aux verb\n#b MAIN '+' & #b AUX #c & #c FIN '+' & #b FORM %b &\n#c HEAD %d & #b HEAD %c ==> #c TAM #d & #b TAM #d & #d HEAD '%c' & #d TENSE %b.\n\n//aspect\n#a HEAD %a & #a MAIN '+' & #a ASPECT %b & #a FIN '-' ==> #a TAM #b & #b HEAD %a & #b ASPECT %b.\n\n//Aspect\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a FIN '+' ==> #b ASPECT %a.\n#a TAM #b & #a MAIN '+' & #a ASPECT %a & #a ASP-AUX #c ASPECT %b ==> #b ASPECT '%b,%a'.\n\n\n\n",
      "query": "#a root #b MORPH #c TAM #d ASPECT 'perf'"
    }
  }
}