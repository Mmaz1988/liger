% -*- coding: utf-8 -*-

fstructure('John said that Mary said that Peter was sick.',
	% Properties:
	[
	'markup_free_sentence'('John said that Mary said that Peter was sick.'),
	'xle_version'('XLE release of Apr 25, 2012 09:37.'),
	'grammar'('/home/iness/local/xledir/pargram-interactive/english/index/english.lfg'),
	'grammar_date'('Jun 04, 2017 21:13'),
	'word_count'('9'),
	'statistics'('2+8 solutions, 0.150 CPU seconds, 12.333MB max mem, 599 subtrees unified'),
	'rootcategory'('ROOT'),
	'hostname'('node-10')
	],
	% Choices:
	[
	],
	% Equivalences:
	[
	
	],
	% Constraints:
	[
	cf(1,eq(attr(var(0),'PRED'),semform('say',7,[var(19),var(2)],[]))),
	cf(1,eq(attr(var(0),'SUBJ'),var(19))),
	cf(1,eq(attr(var(0),'COMP'),var(2))),
	cf(1,eq(attr(var(0),'CHECK'),var(1))),
	cf(1,eq(attr(var(0),'TNS-ASP'),var(24))),
	cf(1,eq(attr(var(0),'CLAUSE-TYPE'),'decl')),
	cf(1,eq(attr(var(0),'PASSIVE'),'-')),
	cf(1,eq(attr(var(0),'VTYPE'),'main')),
	cf(1,eq(attr(var(19),'PRED'),semform('John',1,[],[]))),
	cf(1,eq(attr(var(19),'CHECK'),var(20))),
	cf(1,eq(attr(var(19),'NTYPE'),var(21))),
	cf(1,eq(attr(var(19),'CASE'),'nom')),
	cf(1,eq(attr(var(19),'GEND-SEM'),'male')),
	cf(1,eq(attr(var(19),'HUMAN'),'+')),
	cf(1,eq(attr(var(19),'NUM'),'sg')),
	cf(1,eq(attr(var(19),'PERS'),'3')),
	cf(1,eq(attr(var(20),'_LEX-SOURCE'),'morphology')),
	cf(1,eq(attr(var(20),'_PROPER'),'known-name')),
	cf(1,eq(attr(var(21),'NSEM'),var(22))),
	cf(1,eq(attr(var(21),'NSYN'),'proper')),
	cf(1,eq(attr(var(22),'PROPER'),var(23))),
	cf(1,eq(attr(var(23),'NAME-TYPE'),'first_name')),
	cf(1,eq(attr(var(23),'PROPER-TYPE'),'name')),
	cf(1,eq(attr(var(2),'PRED'),semform('say',25,[var(13),var(4)],[]))),
	cf(1,eq(attr(var(2),'SUBJ'),var(13))),
	cf(1,eq(attr(var(2),'COMP'),var(4))),
	cf(1,eq(attr(var(2),'CHECK'),var(3))),
	cf(1,eq(attr(var(2),'TNS-ASP'),var(18))),
	cf(1,eq(attr(var(2),'CLAUSE-TYPE'),'decl')),
	cf(1,eq(attr(var(2),'COMP-FORM'),'that')),
	cf(1,eq(attr(var(2),'PASSIVE'),'-')),
	cf(1,eq(attr(var(2),'VTYPE'),'main')),
	cf(1,eq(attr(var(13),'PRED'),semform('Mary',16,[],[]))),
	cf(1,eq(attr(var(13),'CHECK'),var(14))),
	cf(1,eq(attr(var(13),'NTYPE'),var(15))),
	cf(1,eq(attr(var(13),'CASE'),'nom')),
	cf(1,eq(attr(var(13),'GEND-SEM'),'female')),
	cf(1,eq(attr(var(13),'HUMAN'),'+')),
	cf(1,eq(attr(var(13),'NUM'),'sg')),
	cf(1,eq(attr(var(13),'PERS'),'3')),
	cf(1,eq(attr(var(14),'_LDD'),'-')),
	cf(1,eq(attr(var(14),'_LEX-SOURCE'),'morphology')),
	cf(1,eq(attr(var(14),'_PROPER'),'known-name')),
	cf(1,eq(attr(var(15),'NSEM'),var(16))),
	cf(1,eq(attr(var(15),'NSYN'),'proper')),
	cf(1,eq(attr(var(16),'PROPER'),var(17))),
	cf(1,eq(attr(var(17),'NAME-TYPE'),'first_name')),
	cf(1,eq(attr(var(17),'PROPER-TYPE'),'name')),
	cf(1,eq(attr(var(4),'PRED'),semform('be',38,[var(12)],[var(6)]))),
	cf(1,eq(attr(var(4),'SUBJ'),var(6))),
	cf(1,eq(attr(var(4),'XCOMP-PRED'),var(12))),
	cf(1,eq(attr(var(4),'CHECK'),var(5))),
	cf(1,eq(attr(var(4),'TNS-ASP'),var(11))),
	cf(1,eq(attr(var(4),'CLAUSE-TYPE'),'decl')),
	cf(1,eq(attr(var(4),'COMP-FORM'),'that')),
	cf(1,eq(attr(var(4),'PASSIVE'),'-')),
	cf(1,eq(attr(var(4),'VTYPE'),'copular')),
	cf(1,eq(attr(var(6),'PRED'),semform('Peter',35,[],[]))),
	cf(1,eq(attr(var(6),'CHECK'),var(7))),
	cf(1,eq(attr(var(6),'NTYPE'),var(8))),
	cf(1,eq(attr(var(6),'CASE'),'nom')),
	cf(1,eq(attr(var(6),'GEND-SEM'),'male')),
	cf(1,eq(attr(var(6),'HUMAN'),'+')),
	cf(1,eq(attr(var(6),'NUM'),'sg')),
	cf(1,eq(attr(var(6),'PERS'),'3')),
	cf(1,eq(attr(var(7),'_LDD'),'-')),
	cf(1,eq(attr(var(7),'_LEX-SOURCE'),'morphology')),
	cf(1,eq(attr(var(7),'_PROPER'),'known-name')),
	cf(1,eq(attr(var(8),'NSEM'),var(9))),
	cf(1,eq(attr(var(8),'NSYN'),'proper')),
	cf(1,eq(attr(var(9),'PROPER'),var(10))),
	cf(1,eq(attr(var(10),'NAME-TYPE'),'first_name')),
	cf(1,eq(attr(var(10),'PROPER-TYPE'),'name')),
	cf(1,eq(attr(var(12),'PRED'),semform('sick',39,[var(6)],[]))),
	cf(1,eq(attr(var(12),'SUBJ'),var(6))),
	cf(1,eq(attr(var(12),'ATYPE'),'predicative')),
	cf(1,eq(attr(var(12),'DEGREE'),'positive')),
	cf(1,eq(attr(var(5),'_SUBCAT-FRAME'),'V-SUBJexpl-XCOMPPRED')),
	cf(1,eq(attr(var(11),'MOOD'),'indicative')),
	cf(1,eq(attr(var(11),'PERF'),'-_')),
	cf(1,eq(attr(var(11),'PROG'),'-_')),
	cf(1,eq(attr(var(11),'TENSE'),'past')),
	cf(1,eq(attr(var(3),'_SUBCAT-FRAME'),'V-SUBJ-COMPEXthat')),
	cf(1,eq(attr(var(18),'MOOD'),'indicative')),
	cf(1,eq(attr(var(18),'PERF'),'-_')),
	cf(1,eq(attr(var(18),'PROG'),'-_')),
	cf(1,eq(attr(var(18),'TENSE'),'past')),
	cf(1,eq(attr(var(1),'_SUBCAT-FRAME'),'V-SUBJ-COMPEXthat')),
	cf(1,eq(attr(var(24),'MOOD'),'indicative')),
	cf(1,eq(attr(var(24),'PERF'),'-_')),
	cf(1,eq(attr(var(24),'PROG'),'-_')),
	cf(1,eq(attr(var(24),'TENSE'),'past')),
	cf(1,eq(proj(var(25),'o::'),var(26))),
	cf(1,in_set('MorphProper',var(26))),
	cf(1,in_set('NonGerundNoun',var(26))),
	cf(1,eq(proj(var(27),'o::'),var(28))),
	cf(1,in_set('ThatComp',var(28))),
	cf(1,eq(proj(var(29),'o::'),var(30))),
	cf(1,in_set('MorphProper',var(30))),
	cf(1,in_set('NonGerundNoun',var(30))),
	cf(1,eq(proj(var(31),'o::'),var(32))),
	cf(1,in_set('ThatComp',var(32))),
	cf(1,eq(proj(var(33),'o::'),var(34))),
	cf(1,in_set('MorphProper',var(34))),
	cf(1,in_set('NonGerundNoun',var(34))),
	cf(1,eq(proj(var(35),'o::'),var(36))),
	cf(1,in_set('ClausePunct',var(36))),
	cf(1,in_set('GenGoodPunct',var(36)))
	],
	% C-Structure:
	[
	cf(1,subtree(3773,'ROOT',3772,339)),
	cf(1,phi(3773,var(0))),
	cf(1,cproj(3773,var(35))),
	cf(1,subtree(6272,'N',6271,7)),
	cf(1,phi(6272,var(19))),
	cf(1,subtree(6271,'N',575,9)),
	cf(1,phi(6271,var(19))),
	cf(1,subtree(5976,'S[fin]',-,5953)),
	cf(1,phi(5976,var(0))),
	cf(1,subtree(5953,'NP',-,5848)),
	cf(1,phi(5953,var(19))),
	cf(1,subtree(5848,'NPadj',-,586)),
	cf(1,phi(5848,var(19))),
	cf(1,subtree(4676,'VPall[fin]',-,4157)),
	cf(1,phi(4676,var(0))),
	cf(1,subtree(4462,'CPembed[that]',4457,3368)),
	cf(1,phi(4462,var(2))),
	cf(1,subtree(4457,'CPembed[that]',-,137)),
	cf(1,phi(4457,var(2))),
	cf(1,subtree(4157,'VPv[fin]',4149,4462)),
	cf(1,phi(4157,var(0))),
	cf(1,subtree(4149,'VPv[fin]',-,4142)),
	cf(1,phi(4149,var(0))),
	cf(1,subtree(4142,'V[fin]',4141,62)),
	cf(1,phi(4142,var(0))),
	cf(1,subtree(4141,'V[fin]',4140,66)),
	cf(1,phi(4141,var(0))),
	cf(1,subtree(4140,'V[fin]',4139,70)),
	cf(1,phi(4140,var(0))),
	cf(1,subtree(4139,'V[fin]',-,74)),
	cf(1,phi(4139,var(0))),
	cf(1,subtree(3772,'ROOT',-,3746)),
	cf(1,phi(3772,var(0))),
	cf(1,subtree(3746,'Sadj[fin]',-,3745)),
	cf(1,phi(3746,var(0))),
	cf(1,subtree(3745,'S[fin]',5976,4676)),
	cf(1,phi(3745,var(0))),
	cf(1,subtree(3412,'S[fin]',3402,2863)),
	cf(1,phi(3412,var(2))),
	cf(1,subtree(3402,'S[fin]',-,3043)),
	cf(1,phi(3402,var(2))),
	cf(1,subtree(3368,'Sadj[fin]',-,3412)),
	cf(1,phi(3368,var(2))),
	cf(1,subtree(3043,'NP',-,2979)),
	cf(1,phi(3043,var(13))),
	cf(1,subtree(2979,'NPadj',-,797)),
	cf(1,phi(2979,var(13))),
	cf(1,subtree(2863,'VPall[fin]',-,2840)),
	cf(1,phi(2863,var(2))),
	cf(1,subtree(2840,'VPv[fin]',2831,2642)),
	cf(1,phi(2840,var(2))),
	cf(1,subtree(2831,'VPv[fin]',-,2824)),
	cf(1,phi(2831,var(2))),
	cf(1,subtree(2824,'V[fin]',2823,175)),
	cf(1,phi(2824,var(2))),
	cf(1,subtree(2823,'V[fin]',2822,179)),
	cf(1,phi(2823,var(2))),
	cf(1,subtree(2822,'V[fin]',2821,183)),
	cf(1,phi(2822,var(2))),
	cf(1,subtree(2821,'V[fin]',-,187)),
	cf(1,phi(2821,var(2))),
	cf(1,subtree(2642,'CPembed[that]',2640,1983)),
	cf(1,phi(2642,var(4))),
	cf(1,subtree(2640,'CPembed[that]',-,250)),
	cf(1,phi(2640,var(4))),
	cf(1,subtree(1983,'Sadj[fin]',-,1979)),
	cf(1,phi(1983,var(4))),
	cf(1,subtree(1979,'S[fin]',1972,1453)),
	cf(1,phi(1979,var(4))),
	cf(1,subtree(1972,'S[fin]',-,1708)),
	cf(1,phi(1972,var(4))),
	cf(1,subtree(1708,'NP',-,1697)),
	cf(1,phi(1708,var(6))),
	cf(1,subtree(1697,'NPadj',-,1036)),
	cf(1,phi(1697,var(6))),
	cf(1,subtree(1496,'AP[pred]',-,1243)),
	cf(1,phi(1496,var(12))),
	cf(1,subtree(1453,'VPall[fin]',-,1438)),
	cf(1,phi(1453,var(4))),
	cf(1,subtree(1438,'VPcop[fin]',1424,1496)),
	cf(1,phi(1438,var(4))),
	cf(1,subtree(1424,'VPcop[fin]',-,286)),
	cf(1,phi(1424,var(4))),
	cf(1,subtree(1243,'A',1242,313)),
	cf(1,phi(1243,var(12))),
	cf(1,subtree(1242,'A',-,314)),
	cf(1,phi(1242,var(12))),
	cf(1,subtree(1036,'NPzero',-,1025)),
	cf(1,phi(1036,var(6))),
	cf(1,cproj(1036,var(33))),
	cf(1,subtree(1025,'N',1024,256)),
	cf(1,phi(1025,var(6))),
	cf(1,subtree(1024,'N',1023,258)),
	cf(1,phi(1024,var(6))),
	cf(1,subtree(1023,'N',1022,260)),
	cf(1,phi(1023,var(6))),
	cf(1,subtree(1022,'N',1020,262)),
	cf(1,phi(1022,var(6))),
	cf(1,subtree(1020,'N',-,272)),
	cf(1,phi(1020,var(6))),
	cf(1,subtree(797,'NPzero',-,786)),
	cf(1,phi(797,var(13))),
	cf(1,cproj(797,var(29))),
	cf(1,subtree(786,'N',785,143)),
	cf(1,phi(786,var(13))),
	cf(1,subtree(785,'N',784,145)),
	cf(1,phi(785,var(13))),
	cf(1,subtree(784,'N',783,147)),
	cf(1,phi(784,var(13))),
	cf(1,subtree(783,'N',781,149)),
	cf(1,phi(783,var(13))),
	cf(1,subtree(781,'N',-,159)),
	cf(1,phi(781,var(13))),
	cf(1,subtree(586,'NPzero',-,578)),
	cf(1,phi(586,var(19))),
	cf(1,cproj(586,var(25))),
	cf(1,subtree(578,'N',6272,5)),
	cf(1,phi(578,var(19))),
	cf(1,subtree(575,'N',560,11)),
	cf(1,phi(575,var(19))),
	cf(1,subtree(560,'N',-,21)),
	cf(1,phi(560,var(19))),
	cf(1,subtree(339,'PERIOD',-,331)),
	cf(1,phi(339,var(0))),
	cf(1,terminal(331,'.',[331])),
	cf(1,phi(331,var(0))),
	cf(1,terminal(315,'sick',[310])),
	cf(1,phi(315,var(12))),
	cf(1,subtree(314,'A_BASE',-,315)),
	cf(1,phi(314,var(12))),
	cf(1,subtree(313,'A_SFX_BASE',-,312)),
	cf(1,phi(313,var(12))),
	cf(1,terminal(312,'+Adj',[310])),
	cf(1,phi(312,var(12))),
	cf(1,subtree(286,'Vcop[fin]',-,283)),
	cf(1,phi(286,var(4))),
	cf(1,terminal(283,'was',[283])),
	cf(1,phi(283,var(4))),
	cf(1,subtree(272,'N_BASE',-,265)),
	cf(1,phi(272,var(6))),
	cf(1,terminal(265,'Peter',[252])),
	cf(1,phi(265,var(6))),
	cf(1,terminal(263,'+Prop',[252])),
	cf(1,phi(263,var(6))),
	cf(1,subtree(262,'PROP_SFX_BASE',-,263)),
	cf(1,phi(262,var(6))),
	cf(1,terminal(261,'+Giv',[252])),
	cf(1,phi(261,var(6))),
	cf(1,subtree(260,'NAMETYPE_SFX_BASE',-,261)),
	cf(1,phi(260,var(6))),
	cf(1,terminal(259,'+Masc',[252])),
	cf(1,phi(259,var(6))),
	cf(1,subtree(258,'GEND_SFX_BASE',-,259)),
	cf(1,phi(258,var(6))),
	cf(1,subtree(256,'NNUM_SFX_BASE',-,254)),
	cf(1,phi(256,var(6))),
	cf(1,terminal(254,'+Sg',[252])),
	cf(1,phi(254,var(6))),
	cf(1,subtree(250,'C[that]',-,200)),
	cf(1,phi(250,var(4))),
	cf(1,cproj(250,var(31))),
	cf(1,terminal(200,'that',[200])),
	cf(1,phi(200,var(4))),
	cf(1,cproj(200,var(31))),
	cf(1,subtree(187,'V_BASE',-,185)),
	cf(1,phi(187,var(2))),
	cf(1,terminal(185,'say',[170])),
	cf(1,phi(185,var(2))),
	cf(1,subtree(183,'V_SFX_BASE',-,181)),
	cf(1,phi(183,var(2))),
	cf(1,terminal(181,'+Verb',[170])),
	cf(1,phi(181,var(2))),
	cf(1,subtree(179,'VTNS_SFX_BASE',-,177)),
	cf(1,phi(179,var(2))),
	cf(1,terminal(177,'+PastBoth',[170])),
	cf(1,phi(177,var(2))),
	cf(1,subtree(175,'VPERS_SFX_BASE',-,174)),
	cf(1,phi(175,var(2))),
	cf(1,terminal(174,'+123SP',[170])),
	cf(1,phi(174,var(2))),
	cf(1,subtree(159,'N_BASE',-,152)),
	cf(1,phi(159,var(13))),
	cf(1,terminal(152,'Mary',[139])),
	cf(1,phi(152,var(13))),
	cf(1,terminal(150,'+Prop',[139])),
	cf(1,phi(150,var(13))),
	cf(1,subtree(149,'PROP_SFX_BASE',-,150)),
	cf(1,phi(149,var(13))),
	cf(1,terminal(148,'+Giv',[139])),
	cf(1,phi(148,var(13))),
	cf(1,subtree(147,'NAMETYPE_SFX_BASE',-,148)),
	cf(1,phi(147,var(13))),
	cf(1,terminal(146,'+Fem',[139])),
	cf(1,phi(146,var(13))),
	cf(1,subtree(145,'GEND_SFX_BASE',-,146)),
	cf(1,phi(145,var(13))),
	cf(1,subtree(143,'NNUM_SFX_BASE',-,141)),
	cf(1,phi(143,var(13))),
	cf(1,terminal(141,'+Sg',[139])),
	cf(1,phi(141,var(13))),
	cf(1,subtree(137,'C[that]',-,87)),
	cf(1,phi(137,var(2))),
	cf(1,cproj(137,var(27))),
	cf(1,terminal(87,'that',[87])),
	cf(1,phi(87,var(2))),
	cf(1,cproj(87,var(27))),
	cf(1,subtree(74,'V_BASE',-,72)),
	cf(1,phi(74,var(0))),
	cf(1,terminal(72,'say',[57])),
	cf(1,phi(72,var(0))),
	cf(1,subtree(70,'V_SFX_BASE',-,68)),
	cf(1,phi(70,var(0))),
	cf(1,terminal(68,'+Verb',[57])),
	cf(1,phi(68,var(0))),
	cf(1,subtree(66,'VTNS_SFX_BASE',-,64)),
	cf(1,phi(66,var(0))),
	cf(1,terminal(64,'+PastBoth',[57])),
	cf(1,phi(64,var(0))),
	cf(1,subtree(62,'VPERS_SFX_BASE',-,61)),
	cf(1,phi(62,var(0))),
	cf(1,terminal(61,'+123SP',[57])),
	cf(1,phi(61,var(0))),
	cf(1,subtree(21,'N_BASE',-,14)),
	cf(1,phi(21,var(19))),
	cf(1,terminal(14,'John',[1])),
	cf(1,phi(14,var(19))),
	cf(1,terminal(12,'+Prop',[1])),
	cf(1,phi(12,var(19))),
	cf(1,subtree(11,'PROP_SFX_BASE',-,12)),
	cf(1,phi(11,var(19))),
	cf(1,terminal(10,'+Giv',[1])),
	cf(1,phi(10,var(19))),
	cf(1,subtree(9,'NAMETYPE_SFX_BASE',-,10)),
	cf(1,phi(9,var(19))),
	cf(1,terminal(8,'+Masc',[1])),
	cf(1,phi(8,var(19))),
	cf(1,subtree(7,'GEND_SFX_BASE',-,8)),
	cf(1,phi(7,var(19))),
	cf(1,subtree(5,'NNUM_SFX_BASE',-,3)),
	cf(1,phi(5,var(19))),
	cf(1,terminal(3,'+Sg',[1])),
	cf(1,phi(3,var(19))),
	cf(1,semform_data(1,21,1,5)),
	cf(1,semform_data(7,74,6,10)),
	cf(1,semform_data(16,159,16,20)),
	cf(1,semform_data(25,187,21,25)),
	cf(1,semform_data(35,272,31,36)),
	cf(1,semform_data(38,286,37,40)),
	cf(1,semform_data(39,314,41,45)),
	cf(1,fspan(var(0),1,46)),
	cf(1,fspan(var(19),1,5)),
	cf(1,fspan(var(2),11,45)),
	cf(1,fspan(var(13),16,20)),
	cf(1,fspan(var(4),26,45)),
	cf(1,fspan(var(6),31,36)),
	cf(1,fspan(var(12),41,45)),
	cf(1,surfaceform(1,'John',1,5)),
	cf(1,surfaceform(57,'said',6,10)),
	cf(1,surfaceform(87,'that',11,15)),
	cf(1,surfaceform(139,'Mary',16,20)),
	cf(1,surfaceform(170,'said',21,25)),
	cf(1,surfaceform(200,'that',26,30)),
	cf(1,surfaceform(252,'Peter',31,36)),
	cf(1,surfaceform(283,'was',37,40)),
	cf(1,surfaceform(310,'sick',41,45)),
	cf(1,surfaceform(331,'.',45,46))
	]).
